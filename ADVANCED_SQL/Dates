
/* Using ::DATE function to convert timestamp to a standard date */
SELECT 
    job_title_short AS title,
    job_location AS location,
    job_posted_date ::DATE AS date 
FROM 
    job_postings_fact;

/*Using the 'AT TIME ZONE' function to set and change time zone data*/
SELECT 
    job_title_short AS title,
    job_location AS location,
    job_posted_date AT TIME ZONE 'UTC' AT TIME ZONE 'EST'
FROM 
    job_postings_fact;

/*using the 'EXTRACT' function to extract month and year data from the date*/
SELECT 
    job_title_short AS title,
    job_location AS location,
    job_posted_date AT TIME ZONE 'UTC' AT TIME ZONE 'EST',
    EXTRACT(MONTH FROM job_posted_date) AS date_month
FROM 
    job_postings_fact
    LIMIT 5;

    /*Using EXTRACT function to see what months have the most job postings*/
SELECT 
    COUNT(job_id) AS job_posted_count,
    EXTRACT(MONTH FROM job_posted_date) AS month
FROM 
    job_postings_fact
WHERE 
    job_title_short = 'Data Analyst'
GROUP BY
    month
ORDER BY
    job_posted_count DESC;

/*Practice #1: Find the average salary both yearly (salary_year_avg) and hourly (salary_hour_avg) for job postings using the job_postings_fact table that were posted after June 1, 2023. 
Group the results by job schedule type. Order by the job_schedule_type in ascending order.*/
SELECT 
    job_schedule_type,
    AVG(salary_year_avg) AS Avg_salary_per_year,
    AVG(salary_hour_avg) AS Avg_salary_per_hour
FROM 
    job_postings_fact
WHERE 
    job_posted_date :: DATE > '2023-06-01'
GROUP BY
    job_schedule_type
ORDER BY
    job_schedule_type
    limit 250;


/*Practice #2:Count the number of job postings for each month in 2023, 
adjusting the job_posted_date to be in 'America/New_York' time zone before extracting the month.
 Assume the job_posted_date is stored in UTC. Group by and order by the month.*/
SELECT 
    COUNT(job_id) AS job_posted_count,
    EXTRACT(MONTH FROM job_posted_date AT TIME ZONE 'UTC' AT TIME ZONE 'America/New_York') AS month
FROM 
    job_postings_fact
GROUP BY
    month
ORDER BY
    month;
/*Practice 3: Find companies (include company name) that have posted jobs offering health insurance,
 where these postings were made in the second quarter of 2023. 
 Use date extraction to filter by quarter. 
 And order by the job postings count from highest to lowest.*/
SELECT 
    c.name,
    COUNT(j.job_id) AS job_posted_count
    /* EXTRACT(QUARTER FROM j.job_posted_date) AS quarter*/
FROM job_postings_fact AS j
LEFT JOIN company_dim AS c ON j.company_id = c.company_id
WHERE j.job_health_insurance = TRUE AND EXTRACT(QUARTER FROM j.job_posted_date) = 2
GROUP BY c.name
HAVING COUNT(j.job_id) > 0
ORDER BY COUNT(j.job_id) DESC
LImit 250;


